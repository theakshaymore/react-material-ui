{"version":3,"sources":["components/NoteCard.js","pages/Notes.js","pages/Create.js","components/Layout.js","App.js","index.js"],"names":["useStyles","makeStyles","avatar","backgroundColor","note","category","yellow","green","pink","blue","NoteCard","handleDelete","classes","Card","elevation","CardHeader","Avatar","className","toUpperCase","action","IconButton","onClick","id","title","subheader","CardContent","Typography","variant","color","details","Notes","useState","notes","setNotes","useEffect","fetch","then","res","json","data","a","method","newNotes","filter","Container","breakpointCols","default","1100","700","columnClassName","map","field","marginTop","marginBottom","display","Create","history","useHistory","setTitle","setDetails","titleError","setTitleError","detailsError","setDetailsError","setCategory","size","component","gutterBottom","noValidate","autoComplete","onSubmit","e","preventDefault","headers","body","JSON","stringify","push","TextField","onChange","target","value","label","fullWidth","required","error","multiline","rows","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","Button","type","endIcon","drawerWidth","theme","page","background","width","padding","spacing","root","drawer","drawerPaper","active","appBar","marginLeft","date","flexGrow","toolbar","mixins","Layout","children","location","useLocation","menuItems","text","icon","SubjectOutlined","path","AddCircleOutlineOutlined","AppBar","position","Toolbar","format","Date","src","Drawer","paper","anchor","List","item","ListItem","button","pathname","ListItemIcon","ListItemText","primary","createMuiTheme","palette","main","secondary","purple","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.678c6c86.chunk.js","sourcesContent":["import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport DeleteOutlined from '@material-ui/icons/DeleteOutlined'\nimport { makeStyles } from '@material-ui/core'\nimport Avatar from '@material-ui/core/Avatar'\nimport { yellow, green, pink, blue } from '@material-ui/core/colors'\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: (note) => {\n      if (note.category == 'work') {\n        return yellow[700]\n      }\n      if (note.category == 'money') {\n        return green[500]\n      }\n      if (note.category == 'todos') {\n        return pink[500]\n      }\n      return blue[500]\n    },\n  }\n})\n\nexport default function NoteCard({ note, handleDelete }) {\n  const classes = useStyles(note)\n\n  return (\n    <div>\n      <Card elevation={1}>\n        <CardHeader\n          avatar={\n            <Avatar className={classes.avatar}>\n              {note.category[0].toUpperCase()}\n            </Avatar>}\n          action={\n            <IconButton onClick={() => handleDelete(note.id)}>\n              <DeleteOutlined />\n            </IconButton>\n          }\n          title={note.title}\n          subheader={note.category}\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            { note.details }\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport Container from '@material-ui/core/Container'\nimport Masonry from 'react-masonry-css'\nimport NoteCard from '../components/NoteCard'\n\nexport default function Notes() {\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:8000/notes')\n      .then(res => res.json())\n      .then(data => setNotes(data))\n  }, [])\n\n  const handleDelete = async (id) => {\n    await fetch('http://localhost:8000/notes/' + id, {\n      method: 'DELETE'\n    })\n    const newNotes = notes.filter(note => note.id != id)\n    setNotes(newNotes)\n  }\n\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1\n  };\n\n  return (\n    <Container>\n      <Masonry\n        breakpointCols={breakpoints}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\">\n        {notes.map(note => (\n          <div key={note.id}>\n            <NoteCard note={note} handleDelete={handleDelete} />\n          </div>\n        ))}\n      </Masonry>\n    </Container>\n  )\n}\n","import React, { useState } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'\nimport { makeStyles } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { useHistory } from 'react-router-dom'\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block'\n  }\n})\n\nexport default function Create() {\n  const classes = useStyles()\n  const history = useHistory()\n  const [title, setTitle] = useState('')\n  const [details, setDetails] = useState('')\n  const [titleError, setTitleError] = useState(false)\n  const [detailsError, setDetailsError] = useState(false)\n  const [category, setCategory] = useState('money')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setTitleError(false)\n    setDetailsError(false)\n\n    if (title == '') {\n      setTitleError(true)\n    }\n    if (details == '') {\n      setDetailsError(true)\n    }\n    if (title && details) {\n      fetch('http://localhost:8000/notes', {\n        method: 'POST',\n        headers: {\"Content-type\": \"application/json\"},\n        body: JSON.stringify({ title, details, category })\n      }).then(() => history.push('/'))\n    } \n  }\n\n  return (\n    <Container size=\"sm\">\n      <Typography\n        variant=\"h6\" \n        color=\"textSecondary\"\n        component=\"h2\"\n        gutterBottom\n      >\n        Create a New Note\n      </Typography>\n      \n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <TextField className={classes.field}\n          onChange={(e) => setTitle(e.target.value)}\n          label=\"Note Title\" \n          variant=\"outlined\" \n          color=\"secondary\" \n          fullWidth\n          required\n          error={titleError}\n        />\n        <TextField className={classes.field}\n          onChange={(e) => setDetails(e.target.value)}\n          label=\"Details\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          multiline\n          rows={4}\n          fullWidth\n          required\n          error={detailsError}\n        />\n\n        {/* <Radio value=\"hello\" />\n        <Radio value=\"goodbye\" /> */}\n\n        <FormControl className={classes.field}>\n          <FormLabel>Note Category</FormLabel>\n          <RadioGroup value={category} onChange={(e) => setCategory(e.target.value)}>\n            <FormControlLabel value=\"money\" control={<Radio />} label=\"Money\" />\n            <FormControlLabel value=\"todos\" control={<Radio />} label=\"Todos\" />\n            <FormControlLabel value=\"reminders\" control={<Radio />} label=\"Reminders\" />\n            <FormControlLabel value=\"work\" control={<Radio />} label=\"Work\" />\n          </RadioGroup>\n        </FormControl>\n\n        <Button\n          type=\"submit\" \n          color=\"secondary\" \n          variant=\"contained\"\n          endIcon={<KeyboardArrowRightIcon />}>\n          Submit\n        </Button>\n      </form>\n\n      \n    </Container>\n  )\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { AddCircleOutlineOutlined, SubjectOutlined } from \"@material-ui/icons\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { format } from \"date-fns\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    page: {\n      background: \"#f9f9f9\",\n      width: \"100%\",\n      padding: theme.spacing(3),\n    },\n    root: {\n      display: \"flex\",\n    },\n    drawer: {\n      width: drawerWidth,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    active: {\n      background: \"#f4f4f4\",\n    },\n    title: {\n      padding: theme.spacing(2),\n    },\n    appBar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n    date: {\n      flexGrow: 1,\n    },\n    toolbar: theme.mixins.toolbar,\n    avatar: {\n      marginLeft: theme.spacing(2),\n    },\n  };\n});\n\nexport default function Layout({ children }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const menuItems = [\n    {\n      text: \"My Notes\",\n      icon: <SubjectOutlined color=\"secondary\" />,\n      path: \"/\",\n    },\n    {\n      text: \"Create Note\",\n      icon: <AddCircleOutlineOutlined color=\"secondary\" />,\n      path: \"/create\",\n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      {/* app bar */}\n      <AppBar\n        position=\"fixed\"\n        className={classes.appBar}\n        elevation={0}\n        color=\"primary\"\n      >\n        <Toolbar>\n          <Typography className={classes.date}>\n            Today is the {format(new Date(), \"do MMMM Y\")}\n          </Typography>\n          <Typography>Akshay More</Typography>\n          <Avatar\n            className={classes.avatar}\n            src=\"https://images.pexels.com/photos/4185813/pexels-photo-4185813.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n          />\n        </Toolbar>\n      </AppBar>\n\n      {/* side drawer */}\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{ paper: classes.drawerPaper }}\n        anchor=\"left\"\n      >\n        <div>\n          <Typography variant=\"h5\" className={classes.title}>\n            My Notes\n          </Typography>\n        </div>\n\n        {/* links/list section */}\n        <List>\n          {menuItems.map((item) => (\n            <ListItem\n              button\n              key={item.text}\n              onClick={() => history.push(item.path)}\n              className={location.pathname == item.path ? classes.active : null}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n\n      {/* main content */}\n      <div className={classes.page}>\n        <div className={classes.toolbar}></div>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Notes from \"./pages/Notes\";\nimport Create from \"./pages/Create\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport { purple } from \"@material-ui/core/colors\";\nimport Layout from \"./components/Layout\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#fefefe\",\n    },\n    secondary: purple,\n  },\n  typography: {\n    fontFamily: \"Quicksand\",\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600,\n    fontWeightBold: 700,\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\">\n              <Notes />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n          </Switch>\n        </Layout>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}